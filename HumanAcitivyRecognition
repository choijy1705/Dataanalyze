{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"HumanAcitivyRecognition","provenance":[],"mount_file_id":"10EX-1heG8A-l4yPfnL3BPnTTUHpwbpVh","authorship_tag":"ABX9TyMPmzcyRRCWmLXhkwchiL4H"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"Euard1YM9MEL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":55},"executionInfo":{"status":"ok","timestamp":1597039503369,"user_tz":-540,"elapsed":1250,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"9b9915cf-0eb6-46de-f53f-9bfb077788a5"},"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","# features.txt 파일에는 피처 이름 index와 피처명이 공백으로 분리되어 있음. 이를 DataFrame으로 로드.\n","feature_name_df = pd.read_csv('/content/drive/My Drive/Colab Notebooks/data/human_activity/features.txt', sep='\\s+', header=None, names=['column_index','column_name'])\n","\n","# 피처명 index를 제거하고, 피처명만 리스트 객체로 생성한 뒤 샘플로 10개만 추출\n","feature_name = feature_name_df.iloc[:,1].values.tolist()\n","print('전체 피처명에서 10개만 추출:', feature_name[:10])"],"execution_count":1,"outputs":[{"output_type":"stream","text":["전체 피처명에서 10개만 추출: ['tBodyAcc-mean()-X', 'tBodyAcc-mean()-Y', 'tBodyAcc-mean()-Z', 'tBodyAcc-std()-X', 'tBodyAcc-std()-Y', 'tBodyAcc-std()-Z', 'tBodyAcc-mad()-X', 'tBodyAcc-mad()-Y', 'tBodyAcc-mad()-Z', 'tBodyAcc-max()-X']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WDOB6Rw5-OIx","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":271},"executionInfo":{"status":"ok","timestamp":1597039635778,"user_tz":-540,"elapsed":856,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"914a2bdb-ea5a-47ca-8b32-3df943ceee3f"},"source":["feature_dup_df = feature_name_df.groupby('column_name').count()\n","print(feature_dup_df[feature_dup_df['column_index']>1].count())\n","feature_dup_df[feature_dup_df['column_index']>1].head()"],"execution_count":2,"outputs":[{"output_type":"stream","text":["column_index    42\n","dtype: int64\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>column_index</th>\n","    </tr>\n","    <tr>\n","      <th>column_name</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>fBodyAcc-bandsEnergy()-1,16</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>fBodyAcc-bandsEnergy()-1,24</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>fBodyAcc-bandsEnergy()-1,8</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>fBodyAcc-bandsEnergy()-17,24</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>fBodyAcc-bandsEnergy()-17,32</th>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                              column_index\n","column_name                               \n","fBodyAcc-bandsEnergy()-1,16              3\n","fBodyAcc-bandsEnergy()-1,24              3\n","fBodyAcc-bandsEnergy()-1,8               3\n","fBodyAcc-bandsEnergy()-17,24             3\n","fBodyAcc-bandsEnergy()-17,32             3"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"szJDvlsl-uj1","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597039954487,"user_tz":-540,"elapsed":1175,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}}},"source":["def get_new_feature_name_df(old_feature_name_df):\n","  feature_dup_df = pd.DataFrame(data=old_feature_name_df.groupby('column_name').cumcount(),columns=['dup_cnt'])\n","  feature_dup_df = feature_dup_df.reset_index()\n","  new_feature_name_df = pd.merge(old_feature_name_df.reset_index(), feature_dup_df, how='outer')\n","  new_feature_name_df['column_name'] = new_feature_name_df[['column_name', 'dup_cnt']].apply(lambda x: x[0]+'_'+str(x[1]) if x[1]>0 else x[0], axis=1)\n","  new_feature_name_df = new_feature_name_df.drop(['index'], axis=1)\n","  return new_feature_name_df"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"16FPP4et_8TH","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597040261250,"user_tz":-540,"elapsed":21840,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}}},"source":["import pandas as pd\n","\n","def get_human_dataset( ):\n","    \n","    # 각 데이터 파일들은 공백으로 분리되어 있으므로 read_csv에서 공백 문자를 sep으로 할당.\n","    feature_name_df = pd.read_csv('/content/drive/My Drive/Colab Notebooks/data/human_activity/features.txt',sep='\\s+',\n","                        header=None,names=['column_index','column_name'])\n","    \n","    # 중복된 feature명을 새롭게 수정하는 get_new_feature_name_df()를 이용하여 새로운 feature명 DataFrame생성. \n","    new_feature_name_df = get_new_feature_name_df(feature_name_df)\n","    \n","    # DataFrame에 피처명을 컬럼으로 부여하기 위해 리스트 객체로 다시 변환\n","    feature_name = new_feature_name_df.iloc[:, 1].values.tolist()\n","    \n","    # 학습 피처 데이터 셋과 테스트 피처 데이터을 DataFrame으로 로딩. 컬럼명은 feature_name 적용\n","    X_train = pd.read_csv('/content/drive/My Drive/Colab Notebooks/data/human_activity/train/X_train.txt',sep='\\s+', names=feature_name )\n","    X_test = pd.read_csv('/content/drive/My Drive/Colab Notebooks/data/human_activity/test/X_test.txt',sep='\\s+', names=feature_name)\n","    \n","    # 학습 레이블과 테스트 레이블 데이터을 DataFrame으로 로딩하고 컬럼명은 action으로 부여\n","    y_train = pd.read_csv('/content/drive/My Drive/Colab Notebooks/data/human_activity/train/y_train.txt',sep='\\s+',header=None,names=['action'])\n","    y_test = pd.read_csv('/content/drive/My Drive/Colab Notebooks/data/human_activity/test/y_test.txt',sep='\\s+',header=None,names=['action'])\n","    \n","    # 로드된 학습/테스트용 DataFrame을 모두 반환 \n","    return X_train, X_test, y_train, y_test\n","\n","\n","X_train, X_test, y_train, y_test = get_human_dataset()"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"aXYo_DAkAd3h","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1597040286486,"user_tz":-540,"elapsed":860,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"315ecd84-8a48-45d7-cefe-a6bd9b49c1a0"},"source":["print('## 학습 피처 데이터셋 info()')\n","print(X_train.info())"],"execution_count":7,"outputs":[{"output_type":"stream","text":["## 학습 피처 데이터셋 info()\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 7352 entries, 0 to 7351\n","Columns: 561 entries, tBodyAcc-mean()-X to angle(Z,gravityMean)\n","dtypes: float64(561)\n","memory usage: 31.5 MB\n","None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pZc01F-zBNb1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1597040324645,"user_tz":-540,"elapsed":884,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"5143aa8a-f54c-4340-e2ee-c3f74bf0a1fc"},"source":["print(y_train['action'].value_counts())"],"execution_count":8,"outputs":[{"output_type":"stream","text":["6    1407\n","5    1374\n","4    1286\n","1    1226\n","2    1073\n","3     986\n","Name: action, dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wL8yEm6lBWwB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":91},"executionInfo":{"status":"ok","timestamp":1597040531588,"user_tz":-540,"elapsed":5782,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"e7bba439-136d-4c8f-b34a-45099cb45e50"},"source":["from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import accuracy_score\n","\n","# 예제 반복 시마다 동일한 예측 결과 도출을 위해 random_state 설정\n","dt_clf=DecisionTreeClassifier(random_state=156)\n","dt_clf.fit(X_train,y_train)\n","pred = dt_clf.predict(X_test)\n","accuracy = accuracy_score(y_test, pred)\n","print('결정 트리 예측 정확도 : {0:.4f}'.format(accuracy))\n","\n","# DecisionTreeClassifier의 하이퍼 파라미터 추출\n","print('DecisionTreeClassifier 기본 하이퍼 파라미터:\\n', dt_clf.get_params())"],"execution_count":9,"outputs":[{"output_type":"stream","text":["결정 트리 예측 정확도 : 0.8548\n","DecisionTreeClassifier 기본 하이퍼 파라미터:\n"," {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 156, 'splitter': 'best'}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Qi8Xi6PGCIFp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":107},"executionInfo":{"status":"ok","timestamp":1597040866196,"user_tz":-540,"elapsed":116533,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"c4f24e0f-e571-4327-c050-f35f3dc992ac"},"source":["from sklearn.model_selection import GridSearchCV\n","\n","params = {\n","    'max_depth' : [6, 8, 10, 12, 16, 20, 24]\n","}\n","\n","grid_cv = GridSearchCV(dt_clf, param_grid=params, scoring = 'accuracy', cv=5, verbose=1)\n","grid_cv.fit(X_train, y_train)\n","print('GridSearchCV 최고 평균 정확도 수치:{0:4f}'.format(grid_cv.best_score_))\n","print('GridSearchCV 최적 하이퍼 파라미터:', grid_cv.best_params_)"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Fitting 5 folds for each of 7 candidates, totalling 35 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done  35 out of  35 | elapsed:  1.8min finished\n"],"name":"stderr"},{"output_type":"stream","text":["GridSearchCV 최고 평균 정확도 수치:0.851344\n","GridSearchCV 최적 하이퍼 파라미터: {'max_depth': 16}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"BjKLGKGxC68w","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":266},"executionInfo":{"status":"ok","timestamp":1597040900689,"user_tz":-540,"elapsed":866,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"d1746948-e144-4436-8ea8-902c109c12d6"},"source":["# GridSearchCV객체의 cv_results_ 속성을 DataFrame으로 생성.\n","cv_results_df = pd.DataFrame(grid_cv.cv_results_)\n","\n","# max_depth 파라미터 값과 그때의 테스트 세트, 학습 데이터 세트의 정확도 수치 추출\n","cv_results_df[['param_max_depth','mean_test_score']]"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>param_max_depth</th>\n","      <th>mean_test_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>0.850791</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8</td>\n","      <td>0.851069</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10</td>\n","      <td>0.851209</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12</td>\n","      <td>0.844135</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>16</td>\n","      <td>0.851344</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>20</td>\n","      <td>0.850800</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>24</td>\n","      <td>0.849440</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  param_max_depth  mean_test_score\n","0               6         0.850791\n","1               8         0.851069\n","2              10         0.851209\n","3              12         0.844135\n","4              16         0.851344\n","5              20         0.850800\n","6              24         0.849440"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"yr_SZ_ZzDegA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1597041103169,"user_tz":-540,"elapsed":30298,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"dff51311-f811-478b-ccdd-1b82821adfde"},"source":["max_depths = [6,8,10,12,16,20,24]\n","# max_depth 값을 변화시키면서 그때마다 학습과 테스트 세트에서의 예측 성능 측정\n","for depth in max_depths:\n","  dt_clf = DecisionTreeClassifier(max_depth=depth, random_state=156)\n","  dt_clf.fit(X_train,y_train)\n","  pred = dt_clf.predict(X_test)\n","  accuracy = accuracy_score(y_test, pred)\n","  print('max_depth = {0} 정확도 : {1:.4f}'.format(depth, accuracy))"],"execution_count":16,"outputs":[{"output_type":"stream","text":["max_depth = 6 정확도 : 0.855786\n","max_depth = 8 정확도 : 0.870716\n","max_depth = 10 정확도 : 0.867323\n","max_depth = 12 정확도 : 0.864608\n","max_depth = 16 정확도 : 0.857482\n","max_depth = 20 정확도 : 0.854768\n","max_depth = 24 정확도 : 0.854768\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Hd7ih84OENoO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":107},"executionInfo":{"status":"ok","timestamp":1597041400925,"user_tz":-540,"elapsed":116580,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"a41074f4-860c-4971-8a50-0970a081c946"},"source":["params = {\n","    'max_depth' : [8,12,16,20],\n","    'min_samples_split' : [16,24]\n","}\n","\n","gird_cv = GridSearchCV(dt_clf, param_grid=params, scoring='accuracy', cv=5, verbose=1)\n","grid_cv.fit(X_train, y_train)\n","print('GridSearchCV 최고 평균 정확도 수치 : {0:.4f}'.format(grid_cv.best_score_))\n","print('GridSearchCV 최적 하이퍼 파라미터:', grid_cv.best_params_)"],"execution_count":17,"outputs":[{"output_type":"stream","text":["Fitting 5 folds for each of 7 candidates, totalling 35 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done  35 out of  35 | elapsed:  1.8min finished\n"],"name":"stderr"},{"output_type":"stream","text":["GridSearchCV 최고 평균 정확도 수치 : 0.8513\n","GridSearchCV 최적 하이퍼 파라미터: {'max_depth': 16}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6HkiPQOqFBR2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1597041401809,"user_tz":-540,"elapsed":864,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"cc813ac0-8ac6-481e-c866-417afc5a0f9d"},"source":["best_df_clf = grid_cv.best_estimator_\n","pred1 = best_df_clf.predict(X_test)\n","accuracy = accuracy_score(y_test,pred1)\n","print('결정 트리 예측 정확도 : {0:.4f}'.format(accuracy))"],"execution_count":18,"outputs":[{"output_type":"stream","text":["결정 트리 예측 정확도 : 0.8575\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ESed2GAsFXvO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":390},"executionInfo":{"status":"ok","timestamp":1597041799371,"user_tz":-540,"elapsed":1221,"user":{"displayName":"최준영","photoUrl":"","userId":"02012717858183245906"}},"outputId":"15121db4-2a4e-44dd-aa6d-57ca4d20c57c"},"source":["import seaborn as sns\n","\n","ftr_importances_values = best_df_clf.feature_importances_\n","\n","# Top 중요도로 정렬을 쉽게하고, Seaborn의 막대 그래프로 쉽게 표현하기 위해 Series 변환\n","ftr_importances = pd.Series(ftr_importances_values,index=X_train.columns)\n","# 중요도 값 순으로 Series정렬\n","ftr_top20 = ftr_importances.sort_values(ascending=False)[:20]\n","plt.figure(figsize=(8,6))\n","plt.title('Feature importance Top 20')\n","sns.barplot(x=ftr_top20, y=ftr_top20.index)\n","plt.show()\n"],"execution_count":20,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"lRAs1YNQG-n2","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}